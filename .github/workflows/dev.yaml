name: "Dev - Build and deploy yrkesskade skjema"
on:
  push:
    branches:
      - "dev"
env:
  "IMAGE": "ghcr.io/${{ github.repository }}:${{ github.sha }}"
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: "actions/setup-node@v2"
        with:
          node-version: "14"
          cache: "yarn"
          registry-url: 'https://npm.pkg.github.com'
          scope: '@navikt'
      - name: "install server dependencies Yarn"
        # if: "steps.cache-server-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: "install dependencies Yarn"
        run: "yarn install --frozen-lockfile"
        working-directory: "client"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: "install test dependencies Yarn"
        run: "yarn install --frozen-lockfile"
        working-directory: "test"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          project: ./test
          build: yarn build-prod
          start: yarn dev
          wait-on: 'http://localhost:3001'

  "build":
    name: "build"
    runs-on: "ubuntu-18.04"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-node@v2"
        with:
          node-version: "14"
          cache: "yarn"
          registry-url: 'https://npm.pkg.github.com'
          scope: '@navikt'
      - name: "install server dependencies Yarn"
        # if: "steps.cache-server-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: "install dependencies Yarn"
        run: "yarn install --frozen-lockfile"
        working-directory: "client"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      # - name: "Bygg klient(yarn run build)"
      #   run: "yarn run build"
      # - name: "Bygg server(yarn run build)"
      #   run: "yarn run build"
      #   working-directory: "server"
      - name: "Bygg alt"
        run: "yarn run build-prod"
      - name: "Login to GitHub Docker Registry"
        uses: "docker/login-action@v1"
        with:
          "registry": "ghcr.io"
          "username": "${{ github.actor }}"
          "password": "${{ secrets.GITHUB_TOKEN }}"
      - name: "Build and push the Docker image"
        run: "docker build --pull --tag ${IMAGE} . && docker push ${IMAGE}"

  "deployAppToDev":
    name: "Deploy app to dev"
    needs: "build"
    runs-on: "ubuntu-18.04"
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy to DEV"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": ".nais/nais.yaml"
          "VARS": ".nais/dev.yaml"

  "deployAlertsToDev":
    name: "Deploy alerts to dev"
    needs: "build"
    runs-on: "ubuntu-18.04"
    steps:
      - uses: "actions/checkout@v2"
      - name: "Deploy alerts to DEV"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": ".nais/alerts-dev.yaml"
          "VARS": ".nais/dev.yaml"

